group 'la.renzhen.basis'
version '1.0.0'

allprojects {
    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
        jcenter()
        mavenCentral()
    }
}

ext {
    snapshotRepositoryPath = "$snapshotRepository"
    repositoryPath = "$repository"
    ossUsername = "$ossUsername"
    ossPassword = "$ossPassword"
}

subprojects {
    apply plugin: "java"
    apply plugin: "idea"
    apply plugin: "maven"
    apply plugin: "signing"

    ext {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
        [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'
    }

    idea {
        module {
            downloadSources = true
            outputDir = file('build/classes/java/main')
            testOutputDir = file('build/classes/java/test')
        }
    }

    jar {
        manifest {
            attributes "X-Application-Group": "${rootProject.group}"
            attributes "X-Application-Name": "${rootProject.name}-${project.name}"
            attributes "X-Application-Version": "${rootProject.version}"
            attributes "X-Application-BuildTime": new java.text.SimpleDateFormat("yyyy/MM/dd HH:mm:ss.SSS").format(new Date())
        }
        enabled = true
    }

    configurations {
        optional
        compile.extendsFrom optional
    }

    dependencies {
        compile "com.google.guava:guava:25.1-jre"
        compile "org.slf4j:slf4j-api:1.7.25"
        compile "javax.validation:validation-api:2.0.1.Final"

        testCompile "junit:junit:4.12"
        optional "org.projectlombok:lombok:1.18.4"
        optional "org.projectlombok:lombok-utils:1.18.4"
    }

    task sourceJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from "${buildDir}/docs/javadoc"
    }

    artifacts {
        archives sourceJar
        archives javadocJar
    }

    uploadArchives {
        signing {
            sign configurations.archives
        }
        configuration = configurations.archives
        repositories {
            mavenDeployer {
                snapshotRepository(url: snapshotRepositoryPath) {
                    authentication(userName: ossUsername, password: ossPassword)
                }
                repository(url: repositoryPath) {
                    authentication(userName: ossUsername, password: ossPassword)
                }
                beforeDeployment {
                    MavenDeployment deployment -> signing.signPom(deployment)
                }

                pom.project {
                    artifactId "${project.name}"
                    groupId "${rootProject.group}"
                    version "${rootProject.version}"
                    packaging "jar"

                    name "${project.name}"
                    description "${project.name}"

                    url "https://github.com/ihaiker/remoting.git"
                    inceptionYear "20190201"
                    scm {
                        connection 'scm:git:https://github.com/ihaiker/remoting.git'
                        developerConnection 'scm:git:https://github.com/ihaiker/remoting.git'
                        url 'https://github.com/ihaiker/remoting.git'
                    }
                    developers {
                        developer {
                            id 'ihaiker'
                            name 'haiker'
                            email 'wo@reznzhen.la'
                        }
                    }

                    licenses {
                        license {
                            name 'The Apache License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }

                }
            }
        }
    }
}